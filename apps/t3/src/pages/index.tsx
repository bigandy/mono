import { type NextPage } from "next";
import Head from "next/head";
import { signIn, signOut, useSession } from "next-auth/react";

import { api } from "~/utils/api";
import { StravaActivity } from "~/server/api/routers/strava";

const Home: NextPage = () => {
  // const hello = api.example.hello.useQuery({ text: "from tRPC" });

  // console.log(hello.)
  return (
    <>
      <Head>
        <title>T3 Strava App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="min-h-screen w-full flex-col items-center justify-center bg-black px-2">
        <AuthShowcase />
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: getActivities } = api.strava.getActivities.useQuery(
    { page: 1 },
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={
          sessionData ? () => void signOut() : () => void signIn("strava")
        }
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
      <p className="text-2xl text-white">
        {sessionData && (
          <span>
            Logged in as {sessionData.user?.name}{" "}
            <img src={sessionData?.user?.image ?? ""} className="my-4" />
          </span>
        )}
      </p>

      {getActivities && getActivities.length > 0 && (
        <div className="container mt-4 bg-white p-4 text-base text-black">
          <table className="w-full">
            <thead>
              <tr>
                <th>Name</th>
                <th>Distance</th>
                <th>Activity Type</th>
              </tr>
            </thead>
            {getActivities.map((act: StravaActivity) => {
              return (
                <tr key={`${act.id}`}>
                  <td>{act.name}</td>
                  <td>{act.distance}</td>
                  <td>{act.type}</td>
                </tr>
              );
            })}
          </table>
        </div>
      )}
    </div>
  );
};
